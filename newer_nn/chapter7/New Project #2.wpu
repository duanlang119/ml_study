#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_bert.py'): {83L: (0,
        None,
        1,
        0)}}
debug.recent-run-args = {loc('bert-Chinese-classification-task-master/download_glue_data.py'): [u'"diagnostic" "./datas"',
        u'"CoLA" "./datas"'],
                         loc('bert-Chinese-classification-task-master/run_classifier_word.py'): [u'--task_name NEWS --do_train --do_eval --data_dir ./data/ --vocab_file ./vocab.txt --bert_config_file ./bert_config.json --init_checkpoint ./bert_model.bin --max_seq_length 256 --train_batch_size 32 --learning_rate 2e-3 --num_train_epochs 30.0 --output_dir ./newsAll_output/ --local_rank 3\n',
        u'--task_name NEWS --do_train --do_eval --data_dir ./data/ --vocab_file ./vocab.txt --bert_config_file ./bert_config.json --init_checkpoint ./bert_model.bin --max_seq_length 100 --train_batch_size 32 --learning_rate 2e-5 --num_train_epochs 3.0 --output_dir ./newsAll_output/ --local_rank 3\n',
        u'--task_name NEWS --do_train --do_eval --data_dir ./data/ --vocab_file ./vocab.txt --bert_config_file ./bert_config.json --init_checkpoint ./bert_model.bin --max_seq_length 100 --train_batch_size 32 --learning_rate 2e-5 --num_train_epochs 3.0 --output_dir ./newsAll_output/ --local_rank -1\n',
        u'--task_name NEWS --do_train --do_eval --data_dir ./data/ --vocab_file ./vocab.txt --bert_config_file ./bert_config.json --init_checkpoint ./bert_model.bin --max_seq_length 100 --train_batch_size 32 --learning_rate 2e-5 --num_train_epochs 3.0 --output_dir ./newsAll_output/ --local_rank 0\n',
        u'--task_name NEWS --do_train --do_eval --data_dir ./data/ --vocab_file ./vocab.txt --bert_config_file ./bert_config.json --init_checkpoint ./bert_model.bin --max_seq_length 256 --train_batch_size 32 --learning_rate 2e-5 --num_train_epochs 3.0 --output_dir ./newsAll_output/ --local_rank 0\n',
        u'--task_name NEWS --do_train --do_eval --data_dir ./data/ --vocab_file ./vocab.txt --bert_config_file ./bert_config.json --init_checkpoint ./bert_model.bin --max_seq_length 256 --train_batch_size 32 --learning_rate 2e-5 --num_train_epochs 3.0 --output_dir ./newsAll_output/ --local_rank 3\n',
        u'--task_name NEWS --do_train --do_eval --data_dir ./data/ --vocab_file ./vocab.txt --bert_config_file ./bert_config.json --init_checkpoint ./checkpoint/bert_model.bin --max_seq_length 256 --train_batch_size 32 --learning_rate 2e-5 --num_train_epochs 3.0 --output_dir ./newsAll_output/ --local_rank 3\n'],
                         loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/convert_tf_checkpoint_to_pytorch.py'): [u'--tf_checkpoint_path ./bert_model.ckpt  --bert_config_file ./bert_config.json  --pytorch_dump_path ./pytorch_model.bin',
        u'./bert_model.ckpt   ./bert_config.json   ./pytorch_model.bin',
        u' --tf_checkpoint_path ./bert_model.ckpt   --bert_config_file ./bert_config.json   --pytorch_dump_path ~/pytorch_model.bin',
        u' --tf_checkpoint_path ./bert_model.ckpt   --bert_config_file ./bert_config.json   --pytorch_dump_path ./pytorch_model.bin',
        u' --tf_checkpoint_path ./bert_model.ckpt.data-00000-of-00001   --bert_config_file ./bert_config.json   --pytorch_dump_path ./pytorch_model.bin',
        u' --tf_checkpoint_path /c/Users/62669/Desktop/pytorch/chapter7/torch/pytorch_transformers/chinese_L-12_H-768_A-12/bert_model.ckpt.data-00000-of-00001   --bert_config_file /c/Users/62669/Desktop/pytorch/chapter7/torch/pytorch_transformers/chinese_L-12_H-768_A-12/bert_config.json   --pytorch_dump_path /c/Users/62669/Desktop/pytorch/chapter7/torch/pytorch_transformers/chinese_L-12_H-768_A-12/pytorch_model.bin']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'nKqSEwx6Grp2z6OeqUozYdb7MO'\
        '3gb7At',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.3918495297805643,
                 'override_title': None,
                 'pagelist': [('debug-probe',
                               'tall',
                               0,
                               {'active-range': (None,
        -1,
        -1),
                                'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'history': {u'file:c:/Users/62669/Desktop/pytorch/chapter7/bert-Chinese-classification-task-master/download_glue_data.py': ['t'\
        'ask_name\n'],
        u'file:c:/Users/62669/Desktop/pytorch/chapter7/bert-Chinese-classification-task-master/run_classifier_word.py': ['i'\
        'nput_file\n',
        'with open(input_file,"r") as f:\n     lines = f.readlines()\n\n',
        'open(input_file,"r")\n',
        "f = open(input_file,\"r\",encoding='utf-8')\n",
        'lines = f.readline()\n',
        'line\n',
        'lines\n',
        'for line in lines:\n    print(line)\n\n',
        't\n',
        'device\n'],
        u'file:c:/Users/62669/Desktop/pytorch/chapter7/bert.py': ['segments_'\
        'ids\n',
        'segments_tensors\n',
        'text\n',
        'seq_length\n',
        'input_ids\n',
        'position_ids\n',
        'token_type_ids\n',
        'token_type_ids.shape\n',
        'position_ids.shape\n',
        'input_ids.shape\n',
        'encoded_layers\n',
        'masked_index=11\n',
        "tokenized_text[masked_index] = '[MASK]'\n",
        'indexed_tokens = tokenizer.convert_tokens_to_ids(tokenized_text)\n',
        'tokens_tensor = torch.tensor([indexed_tokens])\n',
        'predictions = maskedLM_model(tokens_tensor, segments_tensors)\n',
        'predicted_index = torch.argmax(predictions[0][0, masked_index]).ite'\
        'm()\n',
        'predicted_token = tokenizer.convert_ids_to_tokens([predicted_index]'\
        ')[0]\n',
        'predictions\n',
        'predictions[0]\n',
        'predictions[0].shape\n',
        'predictions[0][0,masked_index]\n',
        'predictions[0][0,masked_index].shape\n',
        'tokenized_text\n',
        'indexed_tokens\n',
        'tokens_tensor\n',
        'tokens_tensor.shape\n',
        'segments_tensors.shape\n',
        'nextSent_model(tokens_tensor, segments_tensors)[0]\n',
        'predicted_token\n',
        'predicted_index\xe3\x80\x81\n',
        'predicted_index\n',
        'nextSent_model(tokens_tensor, segments_tensors)\n',
        'help(nextSent_model)\n'],
        u'file:c:/Users/62669/Desktop/pytorch/chapter7/gpt.py': ['text\n',
        'indexed_tokens\n',
        'hidden_states[0].shape\n',
        'predictions[0].shape\n',
        'hidden_states\n',
        'predictions\n',
        'predicted_index\n',
        'predicted_token\n',
        'tokenized_text\n',
        'tokenized_text_bis\n',
        'indexed_tokens_bis\n',
        'tokens_tensor\n'],
        u'file:c:/Users/62669/Desktop/pytorch/chapter7/torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/convert_tf_checkpoint_to_pytorch.py': ['t'\
        'f_path\n']},
                                'launch-id': None,
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              ('python-shell',
                               'tall',
                               0,
                               {'active-range': (None,
        -1,
        -1),
                                'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'history': {None: ['a = "\xe4\xb8\xad\xe5\x9b'\
        '\xbd\xe4\xba\xba"\n',
        'a.decode("utf-8")\n',
        'import sys\n',
        'sys.path.append("")\n']},
                                'launch-id': None,
                                'sel-line': 9L,
                                'sel-line-start': 344L,
                                'selection_end': 363L,
                                'selection_start': 344L,
                                'zoom': 0L}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(4,)],
                                 'selected-nodes': [(4,)],
                                 'top-node': (0,)},
                        'flat': {'expanded-nodes': [(0,)],
                                 'selected-nodes': [(1,
        0)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:D:/softwares/Anaconda3/Lib/site-packages/torch/multiprocessing/reductions.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/torch/multiprocessing/reductions.py'),
                      'fd_id')]},
        loc('file:D:/softwares/Anaconda3/lib/site-packages/spacy/util.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/softwares/Anaconda3/lib/site-packages/spacy/util.py'),
                      'add_lookups')]},
        loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/hub.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/hub.py'),
                             '_setup_hubdir')]],
        'top-node': [('generic attribute',
                      loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/hub.py'),
                      'DEFAULT_CACHE_DIR')]},
        loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/functional.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/functional.py'),
                      'adaptive_avg_pool1d')]},
        loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/conv.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/conv.py'),
                      'Conv1d')]},
        loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/module.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/module.py'),
                             '_addindent')]],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('file:D:/softwares/Anaconda3/lib/threading.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/softwares/Anaconda3/lib/threading.py'),
                      'activeCount')]},
        loc('../chapter3/mnist/mnist\xe6\x89\x8b\xe5\x86\x99\xe6\x95\xb0\xe5\xad\x97\xe8\xaf\x86\xe5\x88\xab.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../chapter3/mnist/mnist\xe6\x89\x8b\xe5\x86\x99\xe6\x95\xb0\xe5\xad\x97\xe8\xaf\x86\xe5\x88\xab.py'),
                      'args')]},
        loc('../chapter3/mnist/model.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../chapter3/mnist/model.py'),
                      'MNISTNet')]},
        loc('../chapter3/mnist/train.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../chapter3/mnist/train.py'),
                      'test')]},
        loc('../chapter3/multiprocess/main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../chapter3/multiprocess/main.py'),
                      'args')]},
        loc('../chapter3/multiprocess/train.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../chapter3/multiprocess/train.py'),
                      'train')]},
        loc('../chapter3/multiprocess/\xe5\xa4\x9a\xe8\xbf\x9b\xe7\xa8\x8b\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../chapter3/multiprocess/\xe5\xa4\x9a\xe8\xbf\x9b\xe7\xa8\x8b\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b.py'),
                      'input_data')]},
        loc('../chapter3/\xe5\xa4\x9a\xe8\xbf\x9b\xe7\xa8\x8b.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../chapter3/\xe5\xa4\x9a\xe8\xbf\x9b\xe7\xa8\x8b.py'),
                             'q')]],
        'top-node': [('generic attribute',
                      loc('../chapter3/\xe5\xa4\x9a\xe8\xbf\x9b\xe7\xa8\x8b.py'),
                      'data')]},
        loc('../chapter3/\xe5\xa4\x9a\xe8\xbf\x9b\xe7\xa8\x8b\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../chapter3/\xe5\xa4\x9a\xe8\xbf\x9b\xe7\xa8\x8b\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b.py'),
                      'LinearRegression')]},
        loc('../chapter4/CNN/CNN_dilation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../chapter4/CNN/CNN_dilation.py'),
                      'args')]},
        loc('../chapter4/CNN/CNN\xe6\x89\x8b\xe5\x86\x99\xe6\x95\xb0\xe5\xad\x97\xe8\xaf\x86\xe5\x88\xab.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../chapter4/CNN/CNN\xe6\x89\x8b\xe5\x86\x99\xe6\x95\xb0\xe5\xad\x97\xe8\xaf\x86\xe5\x88\xab.py'),
                             'args')]],
        'top-node': [('generic attribute',
                      loc('../chapter4/CNN/CNN\xe6\x89\x8b\xe5\x86\x99\xe6\x95\xb0\xe5\xad\x97\xe8\xaf\x86\xe5\x88\xab.py'),
                      'args')]},
        loc('../chapter4/CNN/model.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../chapter4/CNN/model.py'),
                             'CNN_Net')]],
        'top-node': [('class def',
                      loc('../chapter4/CNN/model.py'),
                      'CNN_Dilation_Net')]},
        loc('../chapter4/CNN/train.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../chapter4/CNN/train.py'),
                             'train_epoch')]],
        'top-node': [('function def',
                      loc('../chapter4/CNN/train.py'),
                      'test')]},
        loc('hub.py'): {'expanded-nodes': [],
                        'selected-nodes': [[('generic attribute',
        loc('hub.py'),
        'tokens_tensor')]],
                        'top-node': [('generic attribute',
                                      loc('hub.py'),
                                      'double_head_model')]},
        loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/hubconfs/gpt_hubconf.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/hubconfs/gpt_hubconf.py'),
                      'gpt_docstring')]},
        loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_pretrained_bert/tokenization_openai.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_pretrained_bert/tokenization_openai.py'),
                      'get_pairs')]},
        loc('torch/pytorch_pretrained_bert/4ab93d0cd78ae80e746c27c9cd34e90b470abdabe0590c9ec742df61625ba310.b9628f6fe5519626534b82ce7ec72b22ce0ae79550325f45c604a25c0ad87fd6'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('torch/pytorch_pretrained_bert/4ab93d0cd78ae80e746c27c9cd34e90b470abdabe0590c9ec742df61625ba310.b9628f6fe5519626534b82ce7ec72b22ce0ae79550325f45c604a25c0ad87fd6.json'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #1'),
        'LinearRegression')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('debug-io',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          6],
        'notebook_display': 'normal',
        'notebook_percent': 0.22184684684684686,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': '',
                                       'fReverse': True,
                                       'fSearchText': u'strict',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/module.py'),
        {'attrib-starts': [('Module',
                            25),
                           ('Module.to',
                            309)],
         'first-line': 372L,
         'folded-linenos': [],
         'sel-line': 376L,
         'sel-line-start': 14526L,
         'selection_end': 14560L,
         'selection_start': 14560L,
         'zoom': 0L},
        1563629561.403],
        [loc('bert-Chinese-classification-task-master/run_classifier_word.py'),
         {'attrib-starts': [('DataProcessor',
                             74)],
          'first-line': 87L,
          'folded-linenos': [],
          'sel-line': 76L,
          'sel-line-start': 2663L,
          'selection_end': 2663L,
          'selection_start': 2663L,
          'zoom': 0L},
         1563633786.116],
        [loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/module.py'),
         {'attrib-starts': [('Module',
                             25),
                            ('Module.to',
                             309)],
          'first-line': 312L,
          'folded-linenos': [],
          'sel-line': 321L,
          'sel-line-start': 12158L,
          'selection_end': 12213L,
          'selection_start': 12213L,
          'zoom': 0L},
         1563677591.492],
        [loc('bert-Chinese-classification-task-master/run_classifier_word.py'),
         {'attrib-starts': [('DataProcessor',
                             74)],
          'first-line': 87L,
          'folded-linenos': [],
          'sel-line': 76L,
          'sel-line-start': 2663L,
          'selection_end': 2663L,
          'selection_start': 2663L,
          'zoom': 0L},
         1563677593.252],
        [loc('bert.py'),
         {'attrib-starts': [],
          'first-line': 40L,
          'folded-linenos': [],
          'sel-line': 54L,
          'sel-line-start': 2231L,
          'selection_end': 2309L,
          'selection_start': 2262L,
          'zoom': 0L},
         1563677814.688],
        [loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_bert.py'),
         {'attrib-starts': [('BertEmbeddings',
                             241),
                            ('BertEmbeddings.forward',
                             255)],
          'first-line': 242L,
          'folded-linenos': [],
          'sel-line': 267L,
          'sel-line-start': 13933L,
          'selection_end': 13933L,
          'selection_start': 13933L,
          'zoom': 0L},
         1563677852.78],
        [loc('bert.py'),
         {'attrib-starts': [],
          'first-line': 33L,
          'folded-linenos': [],
          'sel-line': 57L,
          'sel-line-start': 2417L,
          'selection_end': 2495L,
          'selection_start': 2448L,
          'zoom': 0L},
         1563678322.451],
        [loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_bert.py'),
         {'attrib-starts': [('BertEmbeddings',
                             241),
                            ('BertEmbeddings.forward',
                             255)],
          'first-line': 209L,
          'folded-linenos': [],
          'sel-line': 267L,
          'sel-line-start': 13933L,
          'selection_end': 13933L,
          'selection_start': 13933L,
          'zoom': 0L},
         1563678334.992],
        [loc('bert.py'),
         {'attrib-starts': [],
          'first-line': 34L,
          'folded-linenos': [],
          'sel-line': 57L,
          'sel-line-start': 2414L,
          'selection_end': 2414L,
          'selection_start': 2414L,
          'zoom': 0L},
         1563678394.337],
        [loc('bert.py'),
         {'attrib-starts': [],
          'first-line': 38L,
          'folded-linenos': [],
          'sel-line': 52L,
          'sel-line-start': 2189L,
          'selection_end': 2203L,
          'selection_start': 2189L,
          'zoom': 0L},
         1563678395.854],
        [loc('bert.py'),
         {'attrib-starts': [],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 631L,
          'selection_end': 677L,
          'selection_start': 677L,
          'zoom': 0L},
         1564392270.909],
        [loc('pytorch BERT\xe8\x8b\xb1\xe6\x96\x87\xe6\x96\x87\xe6\x9c\xac\xe5\x88\x86\xe7\xb1\xbb\xe6\xa8\xa1\xe5\x9e\x8b.ipynb'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1564392276.199],
        [loc('bert.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 545L,
          'selection_end': 580L,
          'selection_start': 580L,
          'zoom': 0L},
         1564394879.875],
        [loc('transformer-xl.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 577L,
          'selection_end': 627L,
          'selection_start': 627L,
          'zoom': 0L},
         1564394886.349],
        [loc('pytorch BERT\xe8\x8b\xb1\xe6\x96\x87\xe6\x96\x87\xe6\x9c\xac\xe5\x88\x86\xe7\xb1\xbb\xe6\xa8\xa1\xe5\x9e\x8b.ipynb'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1564394892.572],
        [loc('gpt.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 537L,
          'selection_end': 553L,
          'selection_start': 553L,
          'zoom': 0L},
         1564394900.071],
        [loc('bert.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 545L,
          'selection_end': 580L,
          'selection_start': 580L,
          'zoom': 0L},
         1564394909.087],
        [loc('gpt.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 555L,
          'selection_end': 576L,
          'selection_start': 576L,
          'zoom': 0L},
         1564395821.038],
        [loc('transformer-xl.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 577L,
          'selection_end': 627L,
          'selection_start': 627L,
          'zoom': 0L},
         1564395822.485],
        [loc('gpt.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 555L,
          'selection_end': 576L,
          'selection_start': 576L,
          'zoom': 0L},
         1564395823.975]],
        20),
        'current-loc': None,
        'editor-state-list': [],
        'has-focus': False,
        'locked': False},
        []),
                               'open_files': []},
        'saved_notebook_display': None,
        'split_percents': {0: 1.0},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.9301801801801802},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (659,
                         237,
                         1024,
                         701)}]}
guimgr.recent-documents = [loc('gpt.py')]
guimgr.visual-state = {loc('file:D:/softwares/Anaconda3/lib/site-packages/spacy/util.py'): {'a'\
        'ttrib-starts': [('load_model',
                          119)],
        'first-line': 125L,
        'folded-linenos': [],
        'sel-line': 138L,
        'sel-line-start': 3985L,
        'selection_end': 3985L,
        'selection_start': 3985L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/hub.py'): {'a'\
        'ttrib-starts': [('_remove_if_exists',
                          80)],
        'first-line': 65L,
        'folded-linenos': [],
        'sel-line': 82L,
        'sel-line-start': 2286L,
        'selection_end': 2318L,
        'selection_start': 2318L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/nn/modules/module.py'): {'a'\
        'ttrib-starts': [('Module',
                          25),
                         ('Module.to',
                          309)],
        'first-line': 312L,
        'folded-linenos': [],
        'sel-line': 321L,
        'sel-line-start': 12158L,
        'selection_end': 12213L,
        'selection_start': 12213L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/lib/site-packages/torch/serialization.py'): {'a'\
        'ttrib-starts': [('load',
                          305)],
        'first-line': 363L,
        'folded-linenos': [],
        'sel-line': 381L,
        'sel-line-start': 14424L,
        'selection_end': 14424L,
        'selection_start': 14424L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/lib/threading.py'): {'a'\
        'ttrib-starts': [('Condition',
                          202),
                         ('Condition.wait',
                          262)],
        'first-line': 278L,
        'folded-linenos': [],
        'sel-line': 301L,
        'sel-line-start': 10426L,
        'selection_end': 10426L,
        'selection_start': 10426L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/lib/urllib/request.py'): {'a'\
        'ttrib-starts': [('AbstractHTTPHandler',
                          1224),
                         ('AbstractHTTPHandler.do_open',
                          1275)],
        'first-line': 1310L,
        'folded-linenos': [],
        'sel-line': 1319L,
        'sel-line-start': 48385L,
        'selection_end': 48385L,
        'selection_start': 48385L,
        'zoom': 0L},
                       loc('../../../AppData/Roaming/Python/Python36/site-packages/numpy/testing/_private/utils.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 257L,
        'selection_end': 257L,
        'selection_start': 257L,
        'zoom': 0L},
                       loc('bert-Chinese-classification-task-master/data/dev.tsv'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('bert-Chinese-classification-task-master/data/test'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 1L,
        'selection_end': 1L,
        'selection_start': 1L,
        'zoom': 0L},
                       loc('bert-Chinese-classification-task-master/data/train.tsv'): {'a'\
        'ttrib-starts': [],
        'first-line': 243L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('bert-Chinese-classification-task-master/download_glue_data.py'): {'a'\
        'ttrib-starts': [('download_and_extract',
                          40)],
        'first-line': 59L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 3728L,
        'selection_end': 3780L,
        'selection_start': 3780L,
        'zoom': 0L},
                       loc('bert-Chinese-classification-task-master/modeling.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 422L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 817L,
        'selection_end': 827L,
        'selection_start': 827L,
        'zoom': 0L},
                       loc('bert-Chinese-classification-task-master/run_classifier_word.py'): {'a'\
        'ttrib-starts': [('DataProcessor',
                          74)],
        'first-line': 87L,
        'folded-linenos': [],
        'sel-line': 76L,
        'sel-line-start': 2663L,
        'selection_end': 2663L,
        'selection_start': 2663L,
        'zoom': 0L},
                       loc('bert.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 545L,
        'selection_end': 580L,
        'selection_start': 580L,
        'zoom': 0L},
                       loc('gpt.py'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 16L,
                                       'sel-line-start': 555L,
                                       'selection_end': 576L,
                                       'selection_start': 576L,
                                       'zoom': 0L},
                       loc('gpt2.py'): {'attrib-starts': [],
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1430L,
        'selection_end': 1481L,
        'selection_start': 1481L,
        'zoom': 0L},
                       loc('hub.py'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 8L,
                                       'sel-line-start': 313L,
                                       'selection_end': 370L,
                                       'selection_start': 370L,
                                       'zoom': 0L},
                       loc('pytorch BERT\xe8\x8b\xb1\xe6\x96\x87\xe6\x96\x87\xe6\x9c\xac\xe5\x88\x86\xe7\xb1\xbb\xe6\xa8\xa1\xe5\x9e\x8b.ipynb'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/hubconf.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 398L,
        'selection_end': 417L,
        'selection_start': 417L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/hubconfs/gpt_hubconf.py'): {'a'\
        'ttrib-starts': [('openAIGPTTokenizer',
                          55)],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 75L,
        'sel-line-start': 3711L,
        'selection_end': 3728L,
        'selection_start': 3728L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_pretrained_bert/tokenization_openai.py'): {'a'\
        'ttrib-starts': [('OpenAIGPTTokenizer',
                          72),
                         ('OpenAIGPTTokenizer.from_pretrained',
                          81)],
        'first-line': 91L,
        'folded-linenos': [],
        'sel-line': 135L,
        'sel-line-start': 5952L,
        'selection_end': 5952L,
        'selection_start': 5952L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 461L,
        'selection_end': 531L,
        'selection_start': 531L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/bert_model.ckpt'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/bert_model.ckpt.data-00000-of-00001'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/bert_model.ckpt.index'): {'a'\
        'ttrib-starts': [],
        'first-line': 114L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/bert_model.ckpt.meta'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/convert_tf_checkpoint_to_pytorch.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 49L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 2577L,
        'selection_end': 2636L,
        'selection_start': 2619L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_bert.py'): {'a'\
        'ttrib-starts': [('BertEmbeddings',
                          241),
                         ('BertEmbeddings.forward',
                          255)],
        'first-line': 209L,
        'folded-linenos': [],
        'sel-line': 267L,
        'sel-line-start': 13933L,
        'selection_end': 13933L,
        'selection_start': 13933L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_openai.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_transfo_xl.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 1071L,
        'selection_end': 1089L,
        'selection_start': 1089L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_utils.py'): {'a'\
        'ttrib-starts': [('PretrainedConfig',
                          55),
                         ('PretrainedConfig.from_json_file',
                          161)],
        'first-line': 149L,
        'folded-linenos': [],
        'sel-line': 163L,
        'sel-line-start': 6888L,
        'selection_end': 6888L,
        'selection_start': 6888L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/modeling_xlm.py'): {'a'\
        'ttrib-starts': [('XLMConfig',
                          59),
                         ('XLMConfig.__init__',
                          104)],
        'first-line': 661L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 5602L,
        'selection_end': 5624L,
        'selection_start': 5624L,
        'zoom': 0L},
                       loc('torch/hub/huggingface_pytorch-pretrained-BERT_master/pytorch_transformers/tokenization_openai.py'): {'a'\
        'ttrib-starts': [('OpenAIGPTTokenizer',
                          76),
                         ('OpenAIGPTTokenizer.__init__',
                          86)],
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 95L,
        'sel-line-start': 3108L,
        'selection_end': 3138L,
        'selection_start': 3138L,
        'zoom': 0L},
                       loc('torch/pytorch_pretrained_bert/4ab93d0cd78ae80e746c27c9cd34e90b470abdabe0590c9ec742df61625ba310.b9628f6fe5519626534b82ce7ec72b22ce0ae79550325f45c604a25c0ad87fd6'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 815973L,
        'selection_start': 815973L,
        'zoom': 0L},
                       loc('torch/pytorch_pretrained_bert/4ab93d0cd78ae80e746c27c9cd34e90b470abdabe0590c9ec742df61625ba310.b9628f6fe5519626534b82ce7ec72b22ce0ae79550325f45c604a25c0ad87fd6.json'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/pytorch_pretrained_bert/openai-gpt-vocab.json'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('torch/transformer-xl.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('transformer-xl.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 577L,
        'selection_end': 627L,
        'selection_start': 627L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.default-encoding = 'utf_8'
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'D:\\softwares\\Anaconda3\\python.exe')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'strict',
                         u'gbk',
                         u'init_checkpoint ',
                         u'TASK2PATH',
                         u'MRPC_TEST',
                         u'MRPC_TRAIN',
                         u'en',
                         u'.cache',
                         u'load_state_dict_from_url',
                         u'pytorch',
                         u'pytorch/']
testing.stored-results = (1,
                          [],
                          {})
